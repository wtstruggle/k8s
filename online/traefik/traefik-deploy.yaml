apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: traefik-ingress-controller
  namespace: ingress-system
  labels:
    app: traefik
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25% #升级过程中最多有多少个POD处于无法提供服务的状态
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      name: traefik
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 1
      containers:
        - image: traefik:v2.5.4
          name: traefik-ingress-lb
          ports:
            - name: web
              containerPort: 80
              hostPort: 80         ## 将容器端口绑定所在服务器的 80 端口
            - name: websecure
              containerPort: 443
              hostPort: 443        ## 将容器端口绑定所在服务器的 443 端口
            - name: admin
              hostPort: 8080
              containerPort: 8080  ## Traefik Dashboard 端口
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 1000m
              memory: 1024Mi
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          args:
            - --configfile=/config/traefik.yaml
          volumeMounts:
            - mountPath: "/ssl"
              name: "ssl"
            - mountPath: "/config"
              name: "config"
            - name: app-logs
              mountPath: /log
            - name: tz-config
              mountPath: /etc/localtime
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
        - image: elastic/filebeat:7.10.1
          name: filebeat
          args: [
              "-c", "/etc/filebeat/filebeat.yml",
              "-e",
          ]
          env:
            - name: pod_ip
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: pod_name
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: node_name
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: node_ip
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: labels_app
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']

          volumeMounts:
            - name: app-logs
              mountPath: /usr/share/filebeat/app/logs
            - name: filebeat-traefik-config
              mountPath: /etc/filebeat/
            - name: tz-config
              mountPath: /etc/localtime
      volumes:
        - name: ssl
          secret:
            secretName: traefik-cert
        - name: config
          configMap:
            name: traefik-config
        - name: app-logs
          emptyDir: {}
        - name: filebeat-traefik-config
          configMap:
            name: filebeat-traefik-config
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
      tolerations: ## 设置容忍所有污点，防止节点被设置污点
        - operator: "Exists"
      nodeSelector: ## 设置node筛选器，在特定label的节点上启动
        edgenode: "true"
